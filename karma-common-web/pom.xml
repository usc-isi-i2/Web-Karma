<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>

    <parent>
        <groupId>edu.isi</groupId>
        <artifactId>webkarma</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <artifactId>karma-common-web</artifactId>

	<dependencies>
		<dependency>
			<groupId>edu.isi</groupId>
			<artifactId>karma-common</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>edu.isi</groupId>
			<artifactId>commands-include</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>

		<!--External dependencies-->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jettyVersion}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<build>
	
		<resources>
			<resource>
				<directory>src/main/config</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/webapp/resources</directory>
			</resource>
			
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archiveClasses>true</archiveClasses>
					<addClasspath>true</addClasspath>
					<webResources>
						<resource>
							<directory>src/main/webapp/</directory>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- Configuration for Jetty -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jettyVersion}</version>
				<configuration>
					<connectors>
						<!-- work around file locking on windows -->
						<connector implementation="org.eclipse.jetty.server.bio.SocketConnector">
							<port>8080</port>
							<!-- this connector defaults to 1300 for some reason -->
						</connector>
					</connectors>

				</configuration>

			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<!-- With this profile, jetty will run during the "test" phase -->
		<profile>
		    <id>jetty-run</id>
		    <build>
		      <plugins>
		        <plugin>
		          <groupId>org.mortbay.jetty</groupId>
		          <artifactId>jetty-maven-plugin</artifactId>
		          <version>7.1.6.v20100715</version>
		          <configuration>
		            <webAppSourceDirectory>
		              ${project.build.directory}/${project.build.finalName}
		            </webAppSourceDirectory>
		          </configuration>
		          <executions>
		            <execution>
		              <id>jetty-run</id>
		              <phase>test</phase>
		              <goals>
		                <goal>run</goal>
		              </goals>
		            </execution>
		          </executions>
		        </plugin>
		      </plugins>
		    </build>
		</profile>

		<profile>
			<id>tomcat-deploy</id>
			<build>
		  		<plugins>
			  		<!-- Configuration for Tomcat -->
			  		<!--

			  		For Tomcat, add the following roles and user to the conf/tomcat-users.xml file as follows
			  		<role rolename="manager-gui"/>
		 			<role rolename="manager-script"/>
		 			<user username="myusername" password="mypassword" roles="manager-gui,manager-script"/>

					Start (or restart) your Tomcat instance to pick up the user configuration changes

		    		Add a corresponding server block to your $M2_HOME/conf/settings.xml:

					<server>
					    <id>TomcatServer</id>
					    <username>myusername</username>
					    <password>mypassword</password>
					</server>

					Set the tomcat url, port and path settings and then run
					
					mvn package -Ptomcat-deploy tomcat:deploy
					
					to deploy WAR in the tomcat container
			  		-->
					<plugin>
				        <groupId>org.codehaus.mojo</groupId>
				  		<artifactId>tomcat-maven-plugin</artifactId>
						<configuration>
								<server>TomcatServer</server>
								<path>/</path>
								<url>http://localhost:8080/manager/text</url>
								<update>true</update>
							</configuration>
				    </plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>